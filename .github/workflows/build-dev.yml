name: Build dev binary
on:
  workflow_dispatch:

jobs:
  build-dev-win:
    strategy:
      matrix:
        include:
        - platform: x64
          bcj: -mf=BCJ2
          name: x64
        - platform: Win32
          bcj: -mf=BCJ2
          name: x86
        - platform: ARM64
          bcj: # -mf=ARM64
          name: arm64
    name: Build ${{ matrix.name }} Windows binary
    runs-on: windows-2019
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/checkout@v3
      - run: msbuild -property:PlatformToolset=ClangCL -property:Configuration=Release -property:Platform=${{ matrix.platform }} par2cmdline.sln
      - run: move ${{ matrix.platform }}\Release\par2.exe par2.exe && 7z a -t7z -mx=9 ${{ matrix.bcj }} par2.7z par2.exe
      - uses: actions/upload-artifact@v3
        with:
          path: ./par2.7z
          name: par2cmdline-turbo-${{ github.ref_name }}-win-${{ matrix.name }}.7z
          retention-days: 5
  
#  build-dev-linux-static:
#    strategy:
#      matrix:
#        include:
#        - target: x86_64-linux-musl
#          xz_bcj: --x86
#          name: amd64
#          configure_host: 
#        - target: aarch64-linux-musl
#          xz_bcj: # --arm64 # requires xz utils >=5.4 to decompress
#          name: aarch64
#          configure_host: --host=aarch64
#        - target: armv7l-linux-musleabihf
#          xz_bcj: --arm
#          name: armv7l
#          configure_host: --host=armv7l
#    name: Build ${{ matrix.name }} Linux static binary
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: Lesmiscore/musl-cross-compilers@heracles
#        id: musl
#        with:
#          target: ${{ matrix.target }}
#      - run: aclocal && automake --warnings=all --add-missing && autoconf --warnings=all
#      - run: ./configure ${{ matrix.configure_host }}
#        env:
#          CC: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-cc
#          CXX: ${{ steps.musl.outputs.path }}/${{ matrix.target }}-c++
#          LDFLAGS: -static
#      - run: make
#      - run: ./par2 -h
#        if: ${{ matrix.name == 'amd64' }}
#      - run: make check
#        if: ${{ matrix.name == 'amd64' }}
#      - run: xz -9e ${{ matrix.xz_bcj }} --lzma2 par2 -c > par2.xz
#      - uses: actions/upload-artifact@v3
#        with:
#          path: ./par2.xz
#          name: par2cmdline-turbo-${{ github.ref_name }}-linux-${{ matrix.name }}.xz
#          retention-days: 5
  build-dev-linux-static:
    strategy:
      matrix:
        include:
        - arch: amd64
          xz_bcj: --x86
          xcc: 
          configure_host: 
        - arch: arm64
          xz_bcj: # --arm64 # requires xz utils >=5.4 to decompress
          xcc: aarch64-linux-gnu-
          configure_host: --host=aarch64
        - arch: armhf
          xz_bcj: --arm
          xcc: arm-linux-gnueabihf-
          configure_host: --host=armv7l
    name: Build ${{ matrix.arch }} Linux static binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cyberjunk/gha-ubuntu-cross@v2
        with:
          arch: ${{ matrix.arch }}
        if: ${{ matrix.arch != 'amd64' }}
      - run: aclocal && automake --warnings=all --add-missing && autoconf --warnings=all
      - run: ./configure ${{ matrix.configure_host }}
        env:
          CC: ${{ matrix.xcc }}gcc
          CXX: ${{ matrix.xcc }}g++
          LDFLAGS: -static
      - run: make
      - run: ./par2 -h
        if: ${{ matrix.arch == 'amd64' }}
      - run: make check
        if: ${{ matrix.arch == 'amd64' }}
      - run: xz -9e ${{ matrix.xz_bcj }} --lzma2 par2 -c > par2.xz
      - uses: actions/upload-artifact@v3
        with:
          path: ./par2.xz
          name: par2cmdline-turbo-${{ github.ref_name }}-linux-${{ matrix.arch }}.xz
          retention-days: 5

  build-dev-mac-x64:
    name: Build x64 MacOS binary
    runs-on: macos-latest
    steps:
      - uses: ConorMacBride/install-package@v1
        with:
          brew: automake
      - uses: actions/checkout@v3
      - run: aclocal && automake --warnings=all --add-missing && autoconf --warnings=all
      - run: ./configure
        env:
          LDFLAGS: -static
      - run: make
      - run: ./par2 -h
      - run: make check
      - run: xz -9e --x86 --lzma2 par2 -c > par2.xz
      - uses: actions/upload-artifact@v3
        with:
          path: ./par2.xz
          name: par2cmdline-turbo-${{ github.ref_name }}-macos-x64.xz
          retention-days: 5

  build-dev-mac-arm64:
    name: Build arm64 MacOS binary
    runs-on: ubuntu-latest
    steps:
      - uses: mbround18/setup-osxcross@v1
        with:
          osx-version: "12.3"
      - uses: actions/checkout@v3
      - run: aclocal && automake --warnings=all --add-missing && autoconf --warnings=all
      - run: ./configure --host=aarch64
        env:
          CC: oa64e-clang
          CXX: oa64e-clang++
          LDFLAGS: -static
      - run: make
      - run: xz -9e --lzma2 par2 -c > par2.xz
      - uses: actions/upload-artifact@v3
        with:
          path: ./par2.xz
          name: par2cmdline-turbo-${{ github.ref_name }}-macos-arm64e.xz
          retention-days: 5
